// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pdk_MsgHeader.proto

#ifndef PROTOBUF_INCLUDED_pdk_5fMsgHeader_2eproto
#define PROTOBUF_INCLUDED_pdk_5fMsgHeader_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_pdk_5fMsgHeader_2eproto 

namespace protobuf_pdk_5fMsgHeader_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_pdk_5fMsgHeader_2eproto
namespace pb {
namespace PDK {
class MsgHeader;
class MsgHeaderDefaultTypeInternal;
extern MsgHeaderDefaultTypeInternal _MsgHeader_default_instance_;
class MsgHeader_Time;
class MsgHeader_TimeDefaultTypeInternal;
extern MsgHeader_TimeDefaultTypeInternal _MsgHeader_Time_default_instance_;
}  // namespace PDK
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::PDK::MsgHeader* Arena::CreateMaybeMessage<::pb::PDK::MsgHeader>(Arena*);
template<> ::pb::PDK::MsgHeader_Time* Arena::CreateMaybeMessage<::pb::PDK::MsgHeader_Time>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {
namespace PDK {

enum MsgHeader_SignalSource {
  MsgHeader_SignalSource_UNKNOWN = 0,
  MsgHeader_SignalSource_SENSOR = 1,
  MsgHeader_SignalSource_ALGORITHM = 2
};
bool MsgHeader_SignalSource_IsValid(int value);
const MsgHeader_SignalSource MsgHeader_SignalSource_SignalSource_MIN = MsgHeader_SignalSource_UNKNOWN;
const MsgHeader_SignalSource MsgHeader_SignalSource_SignalSource_MAX = MsgHeader_SignalSource_ALGORITHM;
const int MsgHeader_SignalSource_SignalSource_ARRAYSIZE = MsgHeader_SignalSource_SignalSource_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgHeader_SignalSource_descriptor();
inline const ::std::string& MsgHeader_SignalSource_Name(MsgHeader_SignalSource value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgHeader_SignalSource_descriptor(), value);
}
inline bool MsgHeader_SignalSource_Parse(
    const ::std::string& name, MsgHeader_SignalSource* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgHeader_SignalSource>(
    MsgHeader_SignalSource_descriptor(), name, value);
}
enum MsgHeader_TimeStampSyncState {
  MsgHeader_TimeStampSyncState_UNKNOWN_SYNC = 0,
  MsgHeader_TimeStampSyncState_NOT_SYNCED = 1,
  MsgHeader_TimeStampSyncState_SYNCED_PTP = 3,
  MsgHeader_TimeStampSyncState_SYNCED_CAN = 5,
  MsgHeader_TimeStampSyncState_SYNC_LOST = 6
};
bool MsgHeader_TimeStampSyncState_IsValid(int value);
const MsgHeader_TimeStampSyncState MsgHeader_TimeStampSyncState_TimeStampSyncState_MIN = MsgHeader_TimeStampSyncState_UNKNOWN_SYNC;
const MsgHeader_TimeStampSyncState MsgHeader_TimeStampSyncState_TimeStampSyncState_MAX = MsgHeader_TimeStampSyncState_SYNC_LOST;
const int MsgHeader_TimeStampSyncState_TimeStampSyncState_ARRAYSIZE = MsgHeader_TimeStampSyncState_TimeStampSyncState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgHeader_TimeStampSyncState_descriptor();
inline const ::std::string& MsgHeader_TimeStampSyncState_Name(MsgHeader_TimeStampSyncState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgHeader_TimeStampSyncState_descriptor(), value);
}
inline bool MsgHeader_TimeStampSyncState_Parse(
    const ::std::string& name, MsgHeader_TimeStampSyncState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgHeader_TimeStampSyncState>(
    MsgHeader_TimeStampSyncState_descriptor(), name, value);
}
// ===================================================================

class MsgHeader_Time : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.PDK.MsgHeader.Time) */ {
 public:
  MsgHeader_Time();
  virtual ~MsgHeader_Time();

  MsgHeader_Time(const MsgHeader_Time& from);

  inline MsgHeader_Time& operator=(const MsgHeader_Time& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgHeader_Time(MsgHeader_Time&& from) noexcept
    : MsgHeader_Time() {
    *this = ::std::move(from);
  }

  inline MsgHeader_Time& operator=(MsgHeader_Time&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHeader_Time& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgHeader_Time* internal_default_instance() {
    return reinterpret_cast<const MsgHeader_Time*>(
               &_MsgHeader_Time_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgHeader_Time* other);
  friend void swap(MsgHeader_Time& a, MsgHeader_Time& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgHeader_Time* New() const final {
    return CreateMaybeMessage<MsgHeader_Time>(NULL);
  }

  MsgHeader_Time* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgHeader_Time>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgHeader_Time& from);
  void MergeFrom(const MsgHeader_Time& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgHeader_Time* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 u_Sec = 1;
  bool has_u_sec() const;
  void clear_u_sec();
  static const int kUSecFieldNumber = 1;
  ::google::protobuf::uint32 u_sec() const;
  void set_u_sec(::google::protobuf::uint32 value);

  // optional uint32 u_Nsec = 2;
  bool has_u_nsec() const;
  void clear_u_nsec();
  static const int kUNsecFieldNumber = 2;
  ::google::protobuf::uint32 u_nsec() const;
  void set_u_nsec(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.PDK.MsgHeader.Time)
 private:
  void set_has_u_sec();
  void clear_has_u_sec();
  void set_has_u_nsec();
  void clear_has_u_nsec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 u_sec_;
  ::google::protobuf::uint32 u_nsec_;
  friend struct ::protobuf_pdk_5fMsgHeader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.PDK.MsgHeader) */ {
 public:
  MsgHeader();
  virtual ~MsgHeader();

  MsgHeader(const MsgHeader& from);

  inline MsgHeader& operator=(const MsgHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgHeader(MsgHeader&& from) noexcept
    : MsgHeader() {
    *this = ::std::move(from);
  }

  inline MsgHeader& operator=(MsgHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgHeader* internal_default_instance() {
    return reinterpret_cast<const MsgHeader*>(
               &_MsgHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgHeader* other);
  friend void swap(MsgHeader& a, MsgHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgHeader* New() const final {
    return CreateMaybeMessage<MsgHeader>(NULL);
  }

  MsgHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgHeader& from);
  void MergeFrom(const MsgHeader& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MsgHeader_Time Time;

  typedef MsgHeader_SignalSource SignalSource;
  static const SignalSource UNKNOWN =
    MsgHeader_SignalSource_UNKNOWN;
  static const SignalSource SENSOR =
    MsgHeader_SignalSource_SENSOR;
  static const SignalSource ALGORITHM =
    MsgHeader_SignalSource_ALGORITHM;
  static inline bool SignalSource_IsValid(int value) {
    return MsgHeader_SignalSource_IsValid(value);
  }
  static const SignalSource SignalSource_MIN =
    MsgHeader_SignalSource_SignalSource_MIN;
  static const SignalSource SignalSource_MAX =
    MsgHeader_SignalSource_SignalSource_MAX;
  static const int SignalSource_ARRAYSIZE =
    MsgHeader_SignalSource_SignalSource_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SignalSource_descriptor() {
    return MsgHeader_SignalSource_descriptor();
  }
  static inline const ::std::string& SignalSource_Name(SignalSource value) {
    return MsgHeader_SignalSource_Name(value);
  }
  static inline bool SignalSource_Parse(const ::std::string& name,
      SignalSource* value) {
    return MsgHeader_SignalSource_Parse(name, value);
  }

  typedef MsgHeader_TimeStampSyncState TimeStampSyncState;
  static const TimeStampSyncState UNKNOWN_SYNC =
    MsgHeader_TimeStampSyncState_UNKNOWN_SYNC;
  static const TimeStampSyncState NOT_SYNCED =
    MsgHeader_TimeStampSyncState_NOT_SYNCED;
  static const TimeStampSyncState SYNCED_PTP =
    MsgHeader_TimeStampSyncState_SYNCED_PTP;
  static const TimeStampSyncState SYNCED_CAN =
    MsgHeader_TimeStampSyncState_SYNCED_CAN;
  static const TimeStampSyncState SYNC_LOST =
    MsgHeader_TimeStampSyncState_SYNC_LOST;
  static inline bool TimeStampSyncState_IsValid(int value) {
    return MsgHeader_TimeStampSyncState_IsValid(value);
  }
  static const TimeStampSyncState TimeStampSyncState_MIN =
    MsgHeader_TimeStampSyncState_TimeStampSyncState_MIN;
  static const TimeStampSyncState TimeStampSyncState_MAX =
    MsgHeader_TimeStampSyncState_TimeStampSyncState_MAX;
  static const int TimeStampSyncState_ARRAYSIZE =
    MsgHeader_TimeStampSyncState_TimeStampSyncState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TimeStampSyncState_descriptor() {
    return MsgHeader_TimeStampSyncState_descriptor();
  }
  static inline const ::std::string& TimeStampSyncState_Name(TimeStampSyncState value) {
    return MsgHeader_TimeStampSyncState_Name(value);
  }
  static inline bool TimeStampSyncState_Parse(const ::std::string& name,
      TimeStampSyncState* value) {
    return MsgHeader_TimeStampSyncState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .pb.PDK.MsgHeader.Time t_Stamp = 2;
  bool has_t_stamp() const;
  void clear_t_stamp();
  static const int kTStampFieldNumber = 2;
  private:
  const ::pb::PDK::MsgHeader_Time& _internal_t_stamp() const;
  public:
  const ::pb::PDK::MsgHeader_Time& t_stamp() const;
  ::pb::PDK::MsgHeader_Time* release_t_stamp();
  ::pb::PDK::MsgHeader_Time* mutable_t_stamp();
  void set_allocated_t_stamp(::pb::PDK::MsgHeader_Time* t_stamp);

  // optional uint32 u_Seq = 1;
  bool has_u_seq() const;
  void clear_u_seq();
  static const int kUSeqFieldNumber = 1;
  ::google::protobuf::uint32 u_seq() const;
  void set_u_seq(::google::protobuf::uint32 value);

  // optional .pb.PDK.MsgHeader.TimeStampSyncState e_Timestamp_sync_state = 4;
  bool has_e_timestamp_sync_state() const;
  void clear_e_timestamp_sync_state();
  static const int kETimestampSyncStateFieldNumber = 4;
  ::pb::PDK::MsgHeader_TimeStampSyncState e_timestamp_sync_state() const;
  void set_e_timestamp_sync_state(::pb::PDK::MsgHeader_TimeStampSyncState value);

  // optional .pb.PDK.MsgHeader.SignalSource e_SignalSource = 5;
  bool has_e_signalsource() const;
  void clear_e_signalsource();
  static const int kESignalSourceFieldNumber = 5;
  ::pb::PDK::MsgHeader_SignalSource e_signalsource() const;
  void set_e_signalsource(::pb::PDK::MsgHeader_SignalSource value);

  // @@protoc_insertion_point(class_scope:pb.PDK.MsgHeader)
 private:
  void set_has_u_seq();
  void clear_has_u_seq();
  void set_has_t_stamp();
  void clear_has_t_stamp();
  void set_has_e_timestamp_sync_state();
  void clear_has_e_timestamp_sync_state();
  void set_has_e_signalsource();
  void clear_has_e_signalsource();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::pb::PDK::MsgHeader_Time* t_stamp_;
  ::google::protobuf::uint32 u_seq_;
  int e_timestamp_sync_state_;
  int e_signalsource_;
  friend struct ::protobuf_pdk_5fMsgHeader_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgHeader_Time

// optional uint32 u_Sec = 1;
inline bool MsgHeader_Time::has_u_sec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHeader_Time::set_has_u_sec() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHeader_Time::clear_has_u_sec() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHeader_Time::clear_u_sec() {
  u_sec_ = 0u;
  clear_has_u_sec();
}
inline ::google::protobuf::uint32 MsgHeader_Time::u_sec() const {
  // @@protoc_insertion_point(field_get:pb.PDK.MsgHeader.Time.u_Sec)
  return u_sec_;
}
inline void MsgHeader_Time::set_u_sec(::google::protobuf::uint32 value) {
  set_has_u_sec();
  u_sec_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.MsgHeader.Time.u_Sec)
}

// optional uint32 u_Nsec = 2;
inline bool MsgHeader_Time::has_u_nsec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHeader_Time::set_has_u_nsec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHeader_Time::clear_has_u_nsec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHeader_Time::clear_u_nsec() {
  u_nsec_ = 0u;
  clear_has_u_nsec();
}
inline ::google::protobuf::uint32 MsgHeader_Time::u_nsec() const {
  // @@protoc_insertion_point(field_get:pb.PDK.MsgHeader.Time.u_Nsec)
  return u_nsec_;
}
inline void MsgHeader_Time::set_u_nsec(::google::protobuf::uint32 value) {
  set_has_u_nsec();
  u_nsec_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.MsgHeader.Time.u_Nsec)
}

// -------------------------------------------------------------------

// MsgHeader

// optional uint32 u_Seq = 1;
inline bool MsgHeader::has_u_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHeader::set_has_u_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHeader::clear_has_u_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHeader::clear_u_seq() {
  u_seq_ = 0u;
  clear_has_u_seq();
}
inline ::google::protobuf::uint32 MsgHeader::u_seq() const {
  // @@protoc_insertion_point(field_get:pb.PDK.MsgHeader.u_Seq)
  return u_seq_;
}
inline void MsgHeader::set_u_seq(::google::protobuf::uint32 value) {
  set_has_u_seq();
  u_seq_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.MsgHeader.u_Seq)
}

// optional .pb.PDK.MsgHeader.Time t_Stamp = 2;
inline bool MsgHeader::has_t_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHeader::set_has_t_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHeader::clear_has_t_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHeader::clear_t_stamp() {
  if (t_stamp_ != NULL) t_stamp_->Clear();
  clear_has_t_stamp();
}
inline const ::pb::PDK::MsgHeader_Time& MsgHeader::_internal_t_stamp() const {
  return *t_stamp_;
}
inline const ::pb::PDK::MsgHeader_Time& MsgHeader::t_stamp() const {
  const ::pb::PDK::MsgHeader_Time* p = t_stamp_;
  // @@protoc_insertion_point(field_get:pb.PDK.MsgHeader.t_Stamp)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::PDK::MsgHeader_Time*>(
      &::pb::PDK::_MsgHeader_Time_default_instance_);
}
inline ::pb::PDK::MsgHeader_Time* MsgHeader::release_t_stamp() {
  // @@protoc_insertion_point(field_release:pb.PDK.MsgHeader.t_Stamp)
  clear_has_t_stamp();
  ::pb::PDK::MsgHeader_Time* temp = t_stamp_;
  t_stamp_ = NULL;
  return temp;
}
inline ::pb::PDK::MsgHeader_Time* MsgHeader::mutable_t_stamp() {
  set_has_t_stamp();
  if (t_stamp_ == NULL) {
    auto* p = CreateMaybeMessage<::pb::PDK::MsgHeader_Time>(GetArenaNoVirtual());
    t_stamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.PDK.MsgHeader.t_Stamp)
  return t_stamp_;
}
inline void MsgHeader::set_allocated_t_stamp(::pb::PDK::MsgHeader_Time* t_stamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete t_stamp_;
  }
  if (t_stamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      t_stamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, t_stamp, submessage_arena);
    }
    set_has_t_stamp();
  } else {
    clear_has_t_stamp();
  }
  t_stamp_ = t_stamp;
  // @@protoc_insertion_point(field_set_allocated:pb.PDK.MsgHeader.t_Stamp)
}

// optional .pb.PDK.MsgHeader.TimeStampSyncState e_Timestamp_sync_state = 4;
inline bool MsgHeader::has_e_timestamp_sync_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgHeader::set_has_e_timestamp_sync_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgHeader::clear_has_e_timestamp_sync_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgHeader::clear_e_timestamp_sync_state() {
  e_timestamp_sync_state_ = 0;
  clear_has_e_timestamp_sync_state();
}
inline ::pb::PDK::MsgHeader_TimeStampSyncState MsgHeader::e_timestamp_sync_state() const {
  // @@protoc_insertion_point(field_get:pb.PDK.MsgHeader.e_Timestamp_sync_state)
  return static_cast< ::pb::PDK::MsgHeader_TimeStampSyncState >(e_timestamp_sync_state_);
}
inline void MsgHeader::set_e_timestamp_sync_state(::pb::PDK::MsgHeader_TimeStampSyncState value) {
  assert(::pb::PDK::MsgHeader_TimeStampSyncState_IsValid(value));
  set_has_e_timestamp_sync_state();
  e_timestamp_sync_state_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.MsgHeader.e_Timestamp_sync_state)
}

// optional .pb.PDK.MsgHeader.SignalSource e_SignalSource = 5;
inline bool MsgHeader::has_e_signalsource() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgHeader::set_has_e_signalsource() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgHeader::clear_has_e_signalsource() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgHeader::clear_e_signalsource() {
  e_signalsource_ = 0;
  clear_has_e_signalsource();
}
inline ::pb::PDK::MsgHeader_SignalSource MsgHeader::e_signalsource() const {
  // @@protoc_insertion_point(field_get:pb.PDK.MsgHeader.e_SignalSource)
  return static_cast< ::pb::PDK::MsgHeader_SignalSource >(e_signalsource_);
}
inline void MsgHeader::set_e_signalsource(::pb::PDK::MsgHeader_SignalSource value) {
  assert(::pb::PDK::MsgHeader_SignalSource_IsValid(value));
  set_has_e_signalsource();
  e_signalsource_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.MsgHeader.e_SignalSource)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace PDK
}  // namespace pb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::PDK::MsgHeader_SignalSource> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::PDK::MsgHeader_SignalSource>() {
  return ::pb::PDK::MsgHeader_SignalSource_descriptor();
}
template <> struct is_proto_enum< ::pb::PDK::MsgHeader_TimeStampSyncState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::PDK::MsgHeader_TimeStampSyncState>() {
  return ::pb::PDK::MsgHeader_TimeStampSyncState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_pdk_5fMsgHeader_2eproto
