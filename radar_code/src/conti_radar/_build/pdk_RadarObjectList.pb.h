// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pdk_RadarObjectList.proto

#ifndef PROTOBUF_INCLUDED_pdk_5fRadarObjectList_2eproto
#define PROTOBUF_INCLUDED_pdk_5fRadarObjectList_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "pdk_SensorMsgHeader.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_pdk_5fRadarObjectList_2eproto 

namespace protobuf_pdk_5fRadarObjectList_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_pdk_5fRadarObjectList_2eproto
namespace pb {
namespace PDK {
class RadarObjectList;
class RadarObjectListDefaultTypeInternal;
extern RadarObjectListDefaultTypeInternal _RadarObjectList_default_instance_;
class RadarObjectList_RadarObject;
class RadarObjectList_RadarObjectDefaultTypeInternal;
extern RadarObjectList_RadarObjectDefaultTypeInternal _RadarObjectList_RadarObject_default_instance_;
}  // namespace PDK
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::PDK::RadarObjectList* Arena::CreateMaybeMessage<::pb::PDK::RadarObjectList>(Arena*);
template<> ::pb::PDK::RadarObjectList_RadarObject* Arena::CreateMaybeMessage<::pb::PDK::RadarObjectList_RadarObject>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {
namespace PDK {

enum RadarObjectList_RadarObject_LDeltaQual {
  RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_ALL_INVALID = 0,
  RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_LEFT_VALID = 1,
  RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_MID_VALID = 2,
  RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_LEFT_MID_VALID = 3,
  RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_RIGHT_VALID = 4,
  RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_RIGHT_LEFT_VALID = 5,
  RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_RIGHT_MID_VALID = 6,
  RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_ALL_VALID = 7
};
bool RadarObjectList_RadarObject_LDeltaQual_IsValid(int value);
const RadarObjectList_RadarObject_LDeltaQual RadarObjectList_RadarObject_LDeltaQual_LDeltaQual_MIN = RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_ALL_INVALID;
const RadarObjectList_RadarObject_LDeltaQual RadarObjectList_RadarObject_LDeltaQual_LDeltaQual_MAX = RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_ALL_VALID;
const int RadarObjectList_RadarObject_LDeltaQual_LDeltaQual_ARRAYSIZE = RadarObjectList_RadarObject_LDeltaQual_LDeltaQual_MAX + 1;

const ::google::protobuf::EnumDescriptor* RadarObjectList_RadarObject_LDeltaQual_descriptor();
inline const ::std::string& RadarObjectList_RadarObject_LDeltaQual_Name(RadarObjectList_RadarObject_LDeltaQual value) {
  return ::google::protobuf::internal::NameOfEnum(
    RadarObjectList_RadarObject_LDeltaQual_descriptor(), value);
}
inline bool RadarObjectList_RadarObject_LDeltaQual_Parse(
    const ::std::string& name, RadarObjectList_RadarObject_LDeltaQual* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RadarObjectList_RadarObject_LDeltaQual>(
    RadarObjectList_RadarObject_LDeltaQual_descriptor(), name, value);
}
enum RadarObjectList_RadarObject_DynamicProperty {
  RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_MOVING = 0,
  RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_STATIONARY = 1,
  RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_ONCOMING = 2,
  RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_UNKNOWN = 3
};
bool RadarObjectList_RadarObject_DynamicProperty_IsValid(int value);
const RadarObjectList_RadarObject_DynamicProperty RadarObjectList_RadarObject_DynamicProperty_DynamicProperty_MIN = RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_MOVING;
const RadarObjectList_RadarObject_DynamicProperty RadarObjectList_RadarObject_DynamicProperty_DynamicProperty_MAX = RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_UNKNOWN;
const int RadarObjectList_RadarObject_DynamicProperty_DynamicProperty_ARRAYSIZE = RadarObjectList_RadarObject_DynamicProperty_DynamicProperty_MAX + 1;

const ::google::protobuf::EnumDescriptor* RadarObjectList_RadarObject_DynamicProperty_descriptor();
inline const ::std::string& RadarObjectList_RadarObject_DynamicProperty_Name(RadarObjectList_RadarObject_DynamicProperty value) {
  return ::google::protobuf::internal::NameOfEnum(
    RadarObjectList_RadarObject_DynamicProperty_descriptor(), value);
}
inline bool RadarObjectList_RadarObject_DynamicProperty_Parse(
    const ::std::string& name, RadarObjectList_RadarObject_DynamicProperty* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RadarObjectList_RadarObject_DynamicProperty>(
    RadarObjectList_RadarObject_DynamicProperty_descriptor(), name, value);
}
enum RadarObjectList_RadarObject_ObjState {
  RadarObjectList_RadarObject_ObjState_OBJSTATE_DELETED = 0,
  RadarObjectList_RadarObject_ObjState_OBJSTATE_NEW = 1,
  RadarObjectList_RadarObject_ObjState_OBJSTATE_MEASURED = 2,
  RadarObjectList_RadarObject_ObjState_OBJSTATE_PREDICTED = 3
};
bool RadarObjectList_RadarObject_ObjState_IsValid(int value);
const RadarObjectList_RadarObject_ObjState RadarObjectList_RadarObject_ObjState_ObjState_MIN = RadarObjectList_RadarObject_ObjState_OBJSTATE_DELETED;
const RadarObjectList_RadarObject_ObjState RadarObjectList_RadarObject_ObjState_ObjState_MAX = RadarObjectList_RadarObject_ObjState_OBJSTATE_PREDICTED;
const int RadarObjectList_RadarObject_ObjState_ObjState_ARRAYSIZE = RadarObjectList_RadarObject_ObjState_ObjState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RadarObjectList_RadarObject_ObjState_descriptor();
inline const ::std::string& RadarObjectList_RadarObject_ObjState_Name(RadarObjectList_RadarObject_ObjState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RadarObjectList_RadarObject_ObjState_descriptor(), value);
}
inline bool RadarObjectList_RadarObject_ObjState_Parse(
    const ::std::string& name, RadarObjectList_RadarObject_ObjState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RadarObjectList_RadarObject_ObjState>(
    RadarObjectList_RadarObject_ObjState_descriptor(), name, value);
}
enum RadarObjectList_KinematicsProvided {
  RadarObjectList_KinematicsProvided_RELATIVE = 0,
  RadarObjectList_KinematicsProvided_ABSOLUTE = 1,
  RadarObjectList_KinematicsProvided_RELATIVE_AND_ABSOLUTE = 2
};
bool RadarObjectList_KinematicsProvided_IsValid(int value);
const RadarObjectList_KinematicsProvided RadarObjectList_KinematicsProvided_KinematicsProvided_MIN = RadarObjectList_KinematicsProvided_RELATIVE;
const RadarObjectList_KinematicsProvided RadarObjectList_KinematicsProvided_KinematicsProvided_MAX = RadarObjectList_KinematicsProvided_RELATIVE_AND_ABSOLUTE;
const int RadarObjectList_KinematicsProvided_KinematicsProvided_ARRAYSIZE = RadarObjectList_KinematicsProvided_KinematicsProvided_MAX + 1;

const ::google::protobuf::EnumDescriptor* RadarObjectList_KinematicsProvided_descriptor();
inline const ::std::string& RadarObjectList_KinematicsProvided_Name(RadarObjectList_KinematicsProvided value) {
  return ::google::protobuf::internal::NameOfEnum(
    RadarObjectList_KinematicsProvided_descriptor(), value);
}
inline bool RadarObjectList_KinematicsProvided_Parse(
    const ::std::string& name, RadarObjectList_KinematicsProvided* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RadarObjectList_KinematicsProvided>(
    RadarObjectList_KinematicsProvided_descriptor(), name, value);
}
// ===================================================================

class RadarObjectList_RadarObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.PDK.RadarObjectList.RadarObject) */ {
 public:
  RadarObjectList_RadarObject();
  virtual ~RadarObjectList_RadarObject();

  RadarObjectList_RadarObject(const RadarObjectList_RadarObject& from);

  inline RadarObjectList_RadarObject& operator=(const RadarObjectList_RadarObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RadarObjectList_RadarObject(RadarObjectList_RadarObject&& from) noexcept
    : RadarObjectList_RadarObject() {
    *this = ::std::move(from);
  }

  inline RadarObjectList_RadarObject& operator=(RadarObjectList_RadarObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarObjectList_RadarObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RadarObjectList_RadarObject* internal_default_instance() {
    return reinterpret_cast<const RadarObjectList_RadarObject*>(
               &_RadarObjectList_RadarObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RadarObjectList_RadarObject* other);
  friend void swap(RadarObjectList_RadarObject& a, RadarObjectList_RadarObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RadarObjectList_RadarObject* New() const final {
    return CreateMaybeMessage<RadarObjectList_RadarObject>(NULL);
  }

  RadarObjectList_RadarObject* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RadarObjectList_RadarObject>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RadarObjectList_RadarObject& from);
  void MergeFrom(const RadarObjectList_RadarObject& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RadarObjectList_RadarObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RadarObjectList_RadarObject_LDeltaQual LDeltaQual;
  static const LDeltaQual LDELTA_QUAL_ALL_INVALID =
    RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_ALL_INVALID;
  static const LDeltaQual LDELTA_QUAL_LEFT_VALID =
    RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_LEFT_VALID;
  static const LDeltaQual LDELTA_QUAL_MID_VALID =
    RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_MID_VALID;
  static const LDeltaQual LDELTA_QUAL_LEFT_MID_VALID =
    RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_LEFT_MID_VALID;
  static const LDeltaQual LDELTA_QUAL_RIGHT_VALID =
    RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_RIGHT_VALID;
  static const LDeltaQual LDELTA_QUAL_RIGHT_LEFT_VALID =
    RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_RIGHT_LEFT_VALID;
  static const LDeltaQual LDELTA_QUAL_RIGHT_MID_VALID =
    RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_RIGHT_MID_VALID;
  static const LDeltaQual LDELTA_QUAL_ALL_VALID =
    RadarObjectList_RadarObject_LDeltaQual_LDELTA_QUAL_ALL_VALID;
  static inline bool LDeltaQual_IsValid(int value) {
    return RadarObjectList_RadarObject_LDeltaQual_IsValid(value);
  }
  static const LDeltaQual LDeltaQual_MIN =
    RadarObjectList_RadarObject_LDeltaQual_LDeltaQual_MIN;
  static const LDeltaQual LDeltaQual_MAX =
    RadarObjectList_RadarObject_LDeltaQual_LDeltaQual_MAX;
  static const int LDeltaQual_ARRAYSIZE =
    RadarObjectList_RadarObject_LDeltaQual_LDeltaQual_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LDeltaQual_descriptor() {
    return RadarObjectList_RadarObject_LDeltaQual_descriptor();
  }
  static inline const ::std::string& LDeltaQual_Name(LDeltaQual value) {
    return RadarObjectList_RadarObject_LDeltaQual_Name(value);
  }
  static inline bool LDeltaQual_Parse(const ::std::string& name,
      LDeltaQual* value) {
    return RadarObjectList_RadarObject_LDeltaQual_Parse(name, value);
  }

  typedef RadarObjectList_RadarObject_DynamicProperty DynamicProperty;
  static const DynamicProperty DYN_PROP_MOVING =
    RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_MOVING;
  static const DynamicProperty DYN_PROP_STATIONARY =
    RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_STATIONARY;
  static const DynamicProperty DYN_PROP_ONCOMING =
    RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_ONCOMING;
  static const DynamicProperty DYN_PROP_UNKNOWN =
    RadarObjectList_RadarObject_DynamicProperty_DYN_PROP_UNKNOWN;
  static inline bool DynamicProperty_IsValid(int value) {
    return RadarObjectList_RadarObject_DynamicProperty_IsValid(value);
  }
  static const DynamicProperty DynamicProperty_MIN =
    RadarObjectList_RadarObject_DynamicProperty_DynamicProperty_MIN;
  static const DynamicProperty DynamicProperty_MAX =
    RadarObjectList_RadarObject_DynamicProperty_DynamicProperty_MAX;
  static const int DynamicProperty_ARRAYSIZE =
    RadarObjectList_RadarObject_DynamicProperty_DynamicProperty_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DynamicProperty_descriptor() {
    return RadarObjectList_RadarObject_DynamicProperty_descriptor();
  }
  static inline const ::std::string& DynamicProperty_Name(DynamicProperty value) {
    return RadarObjectList_RadarObject_DynamicProperty_Name(value);
  }
  static inline bool DynamicProperty_Parse(const ::std::string& name,
      DynamicProperty* value) {
    return RadarObjectList_RadarObject_DynamicProperty_Parse(name, value);
  }

  typedef RadarObjectList_RadarObject_ObjState ObjState;
  static const ObjState OBJSTATE_DELETED =
    RadarObjectList_RadarObject_ObjState_OBJSTATE_DELETED;
  static const ObjState OBJSTATE_NEW =
    RadarObjectList_RadarObject_ObjState_OBJSTATE_NEW;
  static const ObjState OBJSTATE_MEASURED =
    RadarObjectList_RadarObject_ObjState_OBJSTATE_MEASURED;
  static const ObjState OBJSTATE_PREDICTED =
    RadarObjectList_RadarObject_ObjState_OBJSTATE_PREDICTED;
  static inline bool ObjState_IsValid(int value) {
    return RadarObjectList_RadarObject_ObjState_IsValid(value);
  }
  static const ObjState ObjState_MIN =
    RadarObjectList_RadarObject_ObjState_ObjState_MIN;
  static const ObjState ObjState_MAX =
    RadarObjectList_RadarObject_ObjState_ObjState_MAX;
  static const int ObjState_ARRAYSIZE =
    RadarObjectList_RadarObject_ObjState_ObjState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ObjState_descriptor() {
    return RadarObjectList_RadarObject_ObjState_descriptor();
  }
  static inline const ::std::string& ObjState_Name(ObjState value) {
    return RadarObjectList_RadarObject_ObjState_Name(value);
  }
  static inline bool ObjState_Parse(const ::std::string& name,
      ObjState* value) {
    return RadarObjectList_RadarObject_ObjState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated float a_Classification = 40;
  int a_classification_size() const;
  void clear_a_classification();
  static const int kAClassificationFieldNumber = 40;
  float a_classification(int index) const;
  void set_a_classification(int index, float value);
  void add_a_classification(float value);
  const ::google::protobuf::RepeatedField< float >&
      a_classification() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_a_classification();

  // optional uint32 u_ObjId = 1;
  bool has_u_objid() const;
  void clear_u_objid();
  static const int kUObjIdFieldNumber = 1;
  ::google::protobuf::uint32 u_objid() const;
  void set_u_objid(::google::protobuf::uint32 value);

  // optional float f_DistX = 3;
  bool has_f_distx() const;
  void clear_f_distx();
  static const int kFDistXFieldNumber = 3;
  float f_distx() const;
  void set_f_distx(float value);

  // optional float f_DistY = 4;
  bool has_f_disty() const;
  void clear_f_disty();
  static const int kFDistYFieldNumber = 4;
  float f_disty() const;
  void set_f_disty(float value);

  // optional float f_VrelX = 5;
  bool has_f_vrelx() const;
  void clear_f_vrelx();
  static const int kFVrelXFieldNumber = 5;
  float f_vrelx() const;
  void set_f_vrelx(float value);

  // optional float f_VrelY = 6;
  bool has_f_vrely() const;
  void clear_f_vrely();
  static const int kFVrelYFieldNumber = 6;
  float f_vrely() const;
  void set_f_vrely(float value);

  // optional float f_ArelX = 7;
  bool has_f_arelx() const;
  void clear_f_arelx();
  static const int kFArelXFieldNumber = 7;
  float f_arelx() const;
  void set_f_arelx(float value);

  // optional float f_ArelY = 8;
  bool has_f_arely() const;
  void clear_f_arely();
  static const int kFArelYFieldNumber = 8;
  float f_arely() const;
  void set_f_arely(float value);

  // optional float f_DistXStd = 9;
  bool has_f_distxstd() const;
  void clear_f_distxstd();
  static const int kFDistXStdFieldNumber = 9;
  float f_distxstd() const;
  void set_f_distxstd(float value);

  // optional float f_DistYStd = 10;
  bool has_f_distystd() const;
  void clear_f_distystd();
  static const int kFDistYStdFieldNumber = 10;
  float f_distystd() const;
  void set_f_distystd(float value);

  // optional float f_VrelXStd = 11;
  bool has_f_vrelxstd() const;
  void clear_f_vrelxstd();
  static const int kFVrelXStdFieldNumber = 11;
  float f_vrelxstd() const;
  void set_f_vrelxstd(float value);

  // optional float f_VrelYStd = 12;
  bool has_f_vrelystd() const;
  void clear_f_vrelystd();
  static const int kFVrelYStdFieldNumber = 12;
  float f_vrelystd() const;
  void set_f_vrelystd(float value);

  // optional float f_ArelXStd = 13;
  bool has_f_arelxstd() const;
  void clear_f_arelxstd();
  static const int kFArelXStdFieldNumber = 13;
  float f_arelxstd() const;
  void set_f_arelxstd(float value);

  // optional float f_ArelYStd = 14;
  bool has_f_arelystd() const;
  void clear_f_arelystd();
  static const int kFArelYStdFieldNumber = 14;
  float f_arelystd() const;
  void set_f_arelystd(float value);

  // optional float f_LDeltaX_left = 15;
  bool has_f_ldeltax_left() const;
  void clear_f_ldeltax_left();
  static const int kFLDeltaXLeftFieldNumber = 15;
  float f_ldeltax_left() const;
  void set_f_ldeltax_left(float value);

  // optional float f_LDeltaX_mid = 16;
  bool has_f_ldeltax_mid() const;
  void clear_f_ldeltax_mid();
  static const int kFLDeltaXMidFieldNumber = 16;
  float f_ldeltax_mid() const;
  void set_f_ldeltax_mid(float value);

  // optional float f_LDeltaX_right = 17;
  bool has_f_ldeltax_right() const;
  void clear_f_ldeltax_right();
  static const int kFLDeltaXRightFieldNumber = 17;
  float f_ldeltax_right() const;
  void set_f_ldeltax_right(float value);

  // optional float f_LDeltaY_left = 18;
  bool has_f_ldeltay_left() const;
  void clear_f_ldeltay_left();
  static const int kFLDeltaYLeftFieldNumber = 18;
  float f_ldeltay_left() const;
  void set_f_ldeltay_left(float value);

  // optional float f_LDeltaY_mid = 19;
  bool has_f_ldeltay_mid() const;
  void clear_f_ldeltay_mid();
  static const int kFLDeltaYMidFieldNumber = 19;
  float f_ldeltay_mid() const;
  void set_f_ldeltay_mid(float value);

  // optional float f_LDeltaY_right = 20;
  bool has_f_ldeltay_right() const;
  void clear_f_ldeltay_right();
  static const int kFLDeltaYRightFieldNumber = 20;
  float f_ldeltay_right() const;
  void set_f_ldeltay_right(float value);

  // optional .pb.PDK.RadarObjectList.RadarObject.LDeltaQual e_LDeltaQual = 21;
  bool has_e_ldeltaqual() const;
  void clear_e_ldeltaqual();
  static const int kELDeltaQualFieldNumber = 21;
  ::pb::PDK::RadarObjectList_RadarObject_LDeltaQual e_ldeltaqual() const;
  void set_e_ldeltaqual(::pb::PDK::RadarObjectList_RadarObject_LDeltaQual value);

  // optional float f_RCS = 22;
  bool has_f_rcs() const;
  void clear_f_rcs();
  static const int kFRCSFieldNumber = 22;
  float f_rcs() const;
  void set_f_rcs(float value);

  // optional float f_ObjectScore = 23;
  bool has_f_objectscore() const;
  void clear_f_objectscore();
  static const int kFObjectScoreFieldNumber = 23;
  float f_objectscore() const;
  void set_f_objectscore(float value);

  // optional uint32 u_LifeCycles = 24;
  bool has_u_lifecycles() const;
  void clear_u_lifecycles();
  static const int kULifeCyclesFieldNumber = 24;
  ::google::protobuf::uint32 u_lifecycles() const;
  void set_u_lifecycles(::google::protobuf::uint32 value);

  // optional .pb.PDK.RadarObjectList.RadarObject.DynamicProperty e_DynamicProperty = 25;
  bool has_e_dynamicproperty() const;
  void clear_e_dynamicproperty();
  static const int kEDynamicPropertyFieldNumber = 25;
  ::pb::PDK::RadarObjectList_RadarObject_DynamicProperty e_dynamicproperty() const;
  void set_e_dynamicproperty(::pb::PDK::RadarObjectList_RadarObject_DynamicProperty value);

  // optional .pb.PDK.RadarObjectList.RadarObject.ObjState e_ObjState = 26;
  bool has_e_objstate() const;
  void clear_e_objstate();
  static const int kEObjStateFieldNumber = 26;
  ::pb::PDK::RadarObjectList_RadarObject_ObjState e_objstate() const;
  void set_e_objstate(::pb::PDK::RadarObjectList_RadarObject_ObjState value);

  // optional float f_VabsX = 28;
  bool has_f_vabsx() const;
  void clear_f_vabsx();
  static const int kFVabsXFieldNumber = 28;
  float f_vabsx() const;
  void set_f_vabsx(float value);

  // optional float f_VabsY = 29;
  bool has_f_vabsy() const;
  void clear_f_vabsy();
  static const int kFVabsYFieldNumber = 29;
  float f_vabsy() const;
  void set_f_vabsy(float value);

  // optional float f_AabsX = 30;
  bool has_f_aabsx() const;
  void clear_f_aabsx();
  static const int kFAabsXFieldNumber = 30;
  float f_aabsx() const;
  void set_f_aabsx(float value);

  // optional float f_AabsY = 31;
  bool has_f_aabsy() const;
  void clear_f_aabsy();
  static const int kFAabsYFieldNumber = 31;
  float f_aabsy() const;
  void set_f_aabsy(float value);

  // optional float f_VabsXStd = 32;
  bool has_f_vabsxstd() const;
  void clear_f_vabsxstd();
  static const int kFVabsXStdFieldNumber = 32;
  float f_vabsxstd() const;
  void set_f_vabsxstd(float value);

  // optional float f_VabsYStd = 33;
  bool has_f_vabsystd() const;
  void clear_f_vabsystd();
  static const int kFVabsYStdFieldNumber = 33;
  float f_vabsystd() const;
  void set_f_vabsystd(float value);

  // optional float f_AabsXStd = 34;
  bool has_f_aabsxstd() const;
  void clear_f_aabsxstd();
  static const int kFAabsXStdFieldNumber = 34;
  float f_aabsxstd() const;
  void set_f_aabsxstd(float value);

  // optional float f_AabsYStd = 35;
  bool has_f_aabsystd() const;
  void clear_f_aabsystd();
  static const int kFAabsYStdFieldNumber = 35;
  float f_aabsystd() const;
  void set_f_aabsystd(float value);

  // optional float f_Orientation = 36;
  bool has_f_orientation() const;
  void clear_f_orientation();
  static const int kFOrientationFieldNumber = 36;
  float f_orientation() const;
  void set_f_orientation(float value);

  // optional float f_OrientationStd = 37;
  bool has_f_orientationstd() const;
  void clear_f_orientationstd();
  static const int kFOrientationStdFieldNumber = 37;
  float f_orientationstd() const;
  void set_f_orientationstd(float value);

  // optional float f_DistZ = 38;
  bool has_f_distz() const;
  void clear_f_distz();
  static const int kFDistZFieldNumber = 38;
  float f_distz() const;
  void set_f_distz(float value);

  // optional float f_DistZStd = 39;
  bool has_f_distzstd() const;
  void clear_f_distzstd();
  static const int kFDistZStdFieldNumber = 39;
  float f_distzstd() const;
  void set_f_distzstd(float value);

  // @@protoc_insertion_point(class_scope:pb.PDK.RadarObjectList.RadarObject)
 private:
  void set_has_u_objid();
  void clear_has_u_objid();
  void set_has_f_distx();
  void clear_has_f_distx();
  void set_has_f_disty();
  void clear_has_f_disty();
  void set_has_f_vrelx();
  void clear_has_f_vrelx();
  void set_has_f_vrely();
  void clear_has_f_vrely();
  void set_has_f_arelx();
  void clear_has_f_arelx();
  void set_has_f_arely();
  void clear_has_f_arely();
  void set_has_f_distxstd();
  void clear_has_f_distxstd();
  void set_has_f_distystd();
  void clear_has_f_distystd();
  void set_has_f_vrelxstd();
  void clear_has_f_vrelxstd();
  void set_has_f_vrelystd();
  void clear_has_f_vrelystd();
  void set_has_f_arelxstd();
  void clear_has_f_arelxstd();
  void set_has_f_arelystd();
  void clear_has_f_arelystd();
  void set_has_f_ldeltax_left();
  void clear_has_f_ldeltax_left();
  void set_has_f_ldeltax_mid();
  void clear_has_f_ldeltax_mid();
  void set_has_f_ldeltax_right();
  void clear_has_f_ldeltax_right();
  void set_has_f_ldeltay_left();
  void clear_has_f_ldeltay_left();
  void set_has_f_ldeltay_mid();
  void clear_has_f_ldeltay_mid();
  void set_has_f_ldeltay_right();
  void clear_has_f_ldeltay_right();
  void set_has_e_ldeltaqual();
  void clear_has_e_ldeltaqual();
  void set_has_f_rcs();
  void clear_has_f_rcs();
  void set_has_f_objectscore();
  void clear_has_f_objectscore();
  void set_has_u_lifecycles();
  void clear_has_u_lifecycles();
  void set_has_e_dynamicproperty();
  void clear_has_e_dynamicproperty();
  void set_has_e_objstate();
  void clear_has_e_objstate();
  void set_has_f_vabsx();
  void clear_has_f_vabsx();
  void set_has_f_vabsy();
  void clear_has_f_vabsy();
  void set_has_f_aabsx();
  void clear_has_f_aabsx();
  void set_has_f_aabsy();
  void clear_has_f_aabsy();
  void set_has_f_vabsxstd();
  void clear_has_f_vabsxstd();
  void set_has_f_vabsystd();
  void clear_has_f_vabsystd();
  void set_has_f_aabsxstd();
  void clear_has_f_aabsxstd();
  void set_has_f_aabsystd();
  void clear_has_f_aabsystd();
  void set_has_f_orientation();
  void clear_has_f_orientation();
  void set_has_f_orientationstd();
  void clear_has_f_orientationstd();
  void set_has_f_distz();
  void clear_has_f_distz();
  void set_has_f_distzstd();
  void clear_has_f_distzstd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  ::google::protobuf::RepeatedField< float > a_classification_;
  ::google::protobuf::uint32 u_objid_;
  float f_distx_;
  float f_disty_;
  float f_vrelx_;
  float f_vrely_;
  float f_arelx_;
  float f_arely_;
  float f_distxstd_;
  float f_distystd_;
  float f_vrelxstd_;
  float f_vrelystd_;
  float f_arelxstd_;
  float f_arelystd_;
  float f_ldeltax_left_;
  float f_ldeltax_mid_;
  float f_ldeltax_right_;
  float f_ldeltay_left_;
  float f_ldeltay_mid_;
  float f_ldeltay_right_;
  int e_ldeltaqual_;
  float f_rcs_;
  float f_objectscore_;
  ::google::protobuf::uint32 u_lifecycles_;
  int e_dynamicproperty_;
  int e_objstate_;
  float f_vabsx_;
  float f_vabsy_;
  float f_aabsx_;
  float f_aabsy_;
  float f_vabsxstd_;
  float f_vabsystd_;
  float f_aabsxstd_;
  float f_aabsystd_;
  float f_orientation_;
  float f_orientationstd_;
  float f_distz_;
  float f_distzstd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pdk_5fRadarObjectList_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadarObjectList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.PDK.RadarObjectList) */ {
 public:
  RadarObjectList();
  virtual ~RadarObjectList();

  RadarObjectList(const RadarObjectList& from);

  inline RadarObjectList& operator=(const RadarObjectList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RadarObjectList(RadarObjectList&& from) noexcept
    : RadarObjectList() {
    *this = ::std::move(from);
  }

  inline RadarObjectList& operator=(RadarObjectList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarObjectList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RadarObjectList* internal_default_instance() {
    return reinterpret_cast<const RadarObjectList*>(
               &_RadarObjectList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RadarObjectList* other);
  friend void swap(RadarObjectList& a, RadarObjectList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RadarObjectList* New() const final {
    return CreateMaybeMessage<RadarObjectList>(NULL);
  }

  RadarObjectList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RadarObjectList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RadarObjectList& from);
  void MergeFrom(const RadarObjectList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RadarObjectList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RadarObjectList_RadarObject RadarObject;

  typedef RadarObjectList_KinematicsProvided KinematicsProvided;
  static const KinematicsProvided RELATIVE =
    RadarObjectList_KinematicsProvided_RELATIVE;
  static const KinematicsProvided ABSOLUTE =
    RadarObjectList_KinematicsProvided_ABSOLUTE;
  static const KinematicsProvided RELATIVE_AND_ABSOLUTE =
    RadarObjectList_KinematicsProvided_RELATIVE_AND_ABSOLUTE;
  static inline bool KinematicsProvided_IsValid(int value) {
    return RadarObjectList_KinematicsProvided_IsValid(value);
  }
  static const KinematicsProvided KinematicsProvided_MIN =
    RadarObjectList_KinematicsProvided_KinematicsProvided_MIN;
  static const KinematicsProvided KinematicsProvided_MAX =
    RadarObjectList_KinematicsProvided_KinematicsProvided_MAX;
  static const int KinematicsProvided_ARRAYSIZE =
    RadarObjectList_KinematicsProvided_KinematicsProvided_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  KinematicsProvided_descriptor() {
    return RadarObjectList_KinematicsProvided_descriptor();
  }
  static inline const ::std::string& KinematicsProvided_Name(KinematicsProvided value) {
    return RadarObjectList_KinematicsProvided_Name(value);
  }
  static inline bool KinematicsProvided_Parse(const ::std::string& name,
      KinematicsProvided* value) {
    return RadarObjectList_KinematicsProvided_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .pb.PDK.RadarObjectList.RadarObject a_RadarObjectList = 6;
  int a_radarobjectlist_size() const;
  void clear_a_radarobjectlist();
  static const int kARadarObjectListFieldNumber = 6;
  ::pb::PDK::RadarObjectList_RadarObject* mutable_a_radarobjectlist(int index);
  ::google::protobuf::RepeatedPtrField< ::pb::PDK::RadarObjectList_RadarObject >*
      mutable_a_radarobjectlist();
  const ::pb::PDK::RadarObjectList_RadarObject& a_radarobjectlist(int index) const;
  ::pb::PDK::RadarObjectList_RadarObject* add_a_radarobjectlist();
  const ::google::protobuf::RepeatedPtrField< ::pb::PDK::RadarObjectList_RadarObject >&
      a_radarobjectlist() const;

  // repeated string a_ClassificationLabels = 9;
  int a_classificationlabels_size() const;
  void clear_a_classificationlabels();
  static const int kAClassificationLabelsFieldNumber = 9;
  const ::std::string& a_classificationlabels(int index) const;
  ::std::string* mutable_a_classificationlabels(int index);
  void set_a_classificationlabels(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_a_classificationlabels(int index, ::std::string&& value);
  #endif
  void set_a_classificationlabels(int index, const char* value);
  void set_a_classificationlabels(int index, const char* value, size_t size);
  ::std::string* add_a_classificationlabels();
  void add_a_classificationlabels(const ::std::string& value);
  #if LANG_CXX11
  void add_a_classificationlabels(::std::string&& value);
  #endif
  void add_a_classificationlabels(const char* value);
  void add_a_classificationlabels(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& a_classificationlabels() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_a_classificationlabels();

  // optional .pb.PDK.SensorMsgHeader t_Header = 1;
  bool has_t_header() const;
  void clear_t_header();
  static const int kTHeaderFieldNumber = 1;
  private:
  const ::pb::PDK::SensorMsgHeader& _internal_t_header() const;
  public:
  const ::pb::PDK::SensorMsgHeader& t_header() const;
  ::pb::PDK::SensorMsgHeader* release_t_header();
  ::pb::PDK::SensorMsgHeader* mutable_t_header();
  void set_allocated_t_header(::pb::PDK::SensorMsgHeader* t_header);

  // optional float f_EgoVelocity = 3;
  bool has_f_egovelocity() const;
  void clear_f_egovelocity();
  static const int kFEgoVelocityFieldNumber = 3;
  float f_egovelocity() const;
  void set_f_egovelocity(float value);

  // optional float f_EgoYawRate = 4;
  bool has_f_egoyawrate() const;
  void clear_f_egoyawrate();
  static const int kFEgoYawRateFieldNumber = 4;
  float f_egoyawrate() const;
  void set_f_egoyawrate(float value);

  // optional uint32 u_NofUsedObjects = 5;
  bool has_u_nofusedobjects() const;
  void clear_u_nofusedobjects();
  static const int kUNofUsedObjectsFieldNumber = 5;
  ::google::protobuf::uint32 u_nofusedobjects() const;
  void set_u_nofusedobjects(::google::protobuf::uint32 value);

  // optional .pb.PDK.RadarObjectList.KinematicsProvided e_ProvidedKinematics = 8;
  bool has_e_providedkinematics() const;
  void clear_e_providedkinematics();
  static const int kEProvidedKinematicsFieldNumber = 8;
  ::pb::PDK::RadarObjectList_KinematicsProvided e_providedkinematics() const;
  void set_e_providedkinematics(::pb::PDK::RadarObjectList_KinematicsProvided value);

  // @@protoc_insertion_point(class_scope:pb.PDK.RadarObjectList)
 private:
  void set_has_t_header();
  void clear_has_t_header();
  void set_has_f_egovelocity();
  void clear_has_f_egovelocity();
  void set_has_f_egoyawrate();
  void clear_has_f_egoyawrate();
  void set_has_u_nofusedobjects();
  void clear_has_u_nofusedobjects();
  void set_has_e_providedkinematics();
  void clear_has_e_providedkinematics();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::PDK::RadarObjectList_RadarObject > a_radarobjectlist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> a_classificationlabels_;
  ::pb::PDK::SensorMsgHeader* t_header_;
  float f_egovelocity_;
  float f_egoyawrate_;
  ::google::protobuf::uint32 u_nofusedobjects_;
  int e_providedkinematics_;
  friend struct ::protobuf_pdk_5fRadarObjectList_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RadarObjectList_RadarObject

// optional uint32 u_ObjId = 1;
inline bool RadarObjectList_RadarObject::has_u_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_u_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarObjectList_RadarObject::clear_has_u_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadarObjectList_RadarObject::clear_u_objid() {
  u_objid_ = 0u;
  clear_has_u_objid();
}
inline ::google::protobuf::uint32 RadarObjectList_RadarObject::u_objid() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.u_ObjId)
  return u_objid_;
}
inline void RadarObjectList_RadarObject::set_u_objid(::google::protobuf::uint32 value) {
  set_has_u_objid();
  u_objid_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.u_ObjId)
}

// optional float f_DistX = 3;
inline bool RadarObjectList_RadarObject::has_f_distx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_distx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarObjectList_RadarObject::clear_has_f_distx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarObjectList_RadarObject::clear_f_distx() {
  f_distx_ = 0;
  clear_has_f_distx();
}
inline float RadarObjectList_RadarObject::f_distx() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_DistX)
  return f_distx_;
}
inline void RadarObjectList_RadarObject::set_f_distx(float value) {
  set_has_f_distx();
  f_distx_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_DistX)
}

// optional float f_DistY = 4;
inline bool RadarObjectList_RadarObject::has_f_disty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_disty() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RadarObjectList_RadarObject::clear_has_f_disty() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RadarObjectList_RadarObject::clear_f_disty() {
  f_disty_ = 0;
  clear_has_f_disty();
}
inline float RadarObjectList_RadarObject::f_disty() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_DistY)
  return f_disty_;
}
inline void RadarObjectList_RadarObject::set_f_disty(float value) {
  set_has_f_disty();
  f_disty_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_DistY)
}

// optional float f_VrelX = 5;
inline bool RadarObjectList_RadarObject::has_f_vrelx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_vrelx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RadarObjectList_RadarObject::clear_has_f_vrelx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RadarObjectList_RadarObject::clear_f_vrelx() {
  f_vrelx_ = 0;
  clear_has_f_vrelx();
}
inline float RadarObjectList_RadarObject::f_vrelx() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_VrelX)
  return f_vrelx_;
}
inline void RadarObjectList_RadarObject::set_f_vrelx(float value) {
  set_has_f_vrelx();
  f_vrelx_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_VrelX)
}

// optional float f_VrelY = 6;
inline bool RadarObjectList_RadarObject::has_f_vrely() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_vrely() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RadarObjectList_RadarObject::clear_has_f_vrely() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RadarObjectList_RadarObject::clear_f_vrely() {
  f_vrely_ = 0;
  clear_has_f_vrely();
}
inline float RadarObjectList_RadarObject::f_vrely() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_VrelY)
  return f_vrely_;
}
inline void RadarObjectList_RadarObject::set_f_vrely(float value) {
  set_has_f_vrely();
  f_vrely_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_VrelY)
}

// optional float f_ArelX = 7;
inline bool RadarObjectList_RadarObject::has_f_arelx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_arelx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RadarObjectList_RadarObject::clear_has_f_arelx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RadarObjectList_RadarObject::clear_f_arelx() {
  f_arelx_ = 0;
  clear_has_f_arelx();
}
inline float RadarObjectList_RadarObject::f_arelx() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_ArelX)
  return f_arelx_;
}
inline void RadarObjectList_RadarObject::set_f_arelx(float value) {
  set_has_f_arelx();
  f_arelx_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_ArelX)
}

// optional float f_ArelY = 8;
inline bool RadarObjectList_RadarObject::has_f_arely() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_arely() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RadarObjectList_RadarObject::clear_has_f_arely() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RadarObjectList_RadarObject::clear_f_arely() {
  f_arely_ = 0;
  clear_has_f_arely();
}
inline float RadarObjectList_RadarObject::f_arely() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_ArelY)
  return f_arely_;
}
inline void RadarObjectList_RadarObject::set_f_arely(float value) {
  set_has_f_arely();
  f_arely_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_ArelY)
}

// optional float f_DistXStd = 9;
inline bool RadarObjectList_RadarObject::has_f_distxstd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_distxstd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RadarObjectList_RadarObject::clear_has_f_distxstd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RadarObjectList_RadarObject::clear_f_distxstd() {
  f_distxstd_ = 0;
  clear_has_f_distxstd();
}
inline float RadarObjectList_RadarObject::f_distxstd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_DistXStd)
  return f_distxstd_;
}
inline void RadarObjectList_RadarObject::set_f_distxstd(float value) {
  set_has_f_distxstd();
  f_distxstd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_DistXStd)
}

// optional float f_DistYStd = 10;
inline bool RadarObjectList_RadarObject::has_f_distystd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_distystd() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RadarObjectList_RadarObject::clear_has_f_distystd() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RadarObjectList_RadarObject::clear_f_distystd() {
  f_distystd_ = 0;
  clear_has_f_distystd();
}
inline float RadarObjectList_RadarObject::f_distystd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_DistYStd)
  return f_distystd_;
}
inline void RadarObjectList_RadarObject::set_f_distystd(float value) {
  set_has_f_distystd();
  f_distystd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_DistYStd)
}

// optional float f_VrelXStd = 11;
inline bool RadarObjectList_RadarObject::has_f_vrelxstd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_vrelxstd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RadarObjectList_RadarObject::clear_has_f_vrelxstd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RadarObjectList_RadarObject::clear_f_vrelxstd() {
  f_vrelxstd_ = 0;
  clear_has_f_vrelxstd();
}
inline float RadarObjectList_RadarObject::f_vrelxstd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_VrelXStd)
  return f_vrelxstd_;
}
inline void RadarObjectList_RadarObject::set_f_vrelxstd(float value) {
  set_has_f_vrelxstd();
  f_vrelxstd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_VrelXStd)
}

// optional float f_VrelYStd = 12;
inline bool RadarObjectList_RadarObject::has_f_vrelystd() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_vrelystd() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RadarObjectList_RadarObject::clear_has_f_vrelystd() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RadarObjectList_RadarObject::clear_f_vrelystd() {
  f_vrelystd_ = 0;
  clear_has_f_vrelystd();
}
inline float RadarObjectList_RadarObject::f_vrelystd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_VrelYStd)
  return f_vrelystd_;
}
inline void RadarObjectList_RadarObject::set_f_vrelystd(float value) {
  set_has_f_vrelystd();
  f_vrelystd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_VrelYStd)
}

// optional float f_ArelXStd = 13;
inline bool RadarObjectList_RadarObject::has_f_arelxstd() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_arelxstd() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RadarObjectList_RadarObject::clear_has_f_arelxstd() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RadarObjectList_RadarObject::clear_f_arelxstd() {
  f_arelxstd_ = 0;
  clear_has_f_arelxstd();
}
inline float RadarObjectList_RadarObject::f_arelxstd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_ArelXStd)
  return f_arelxstd_;
}
inline void RadarObjectList_RadarObject::set_f_arelxstd(float value) {
  set_has_f_arelxstd();
  f_arelxstd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_ArelXStd)
}

// optional float f_ArelYStd = 14;
inline bool RadarObjectList_RadarObject::has_f_arelystd() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_arelystd() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_arelystd() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RadarObjectList_RadarObject::clear_f_arelystd() {
  f_arelystd_ = 0;
  clear_has_f_arelystd();
}
inline float RadarObjectList_RadarObject::f_arelystd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_ArelYStd)
  return f_arelystd_;
}
inline void RadarObjectList_RadarObject::set_f_arelystd(float value) {
  set_has_f_arelystd();
  f_arelystd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_ArelYStd)
}

// optional float f_LDeltaX_left = 15;
inline bool RadarObjectList_RadarObject::has_f_ldeltax_left() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_ldeltax_left() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_ldeltax_left() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RadarObjectList_RadarObject::clear_f_ldeltax_left() {
  f_ldeltax_left_ = 0;
  clear_has_f_ldeltax_left();
}
inline float RadarObjectList_RadarObject::f_ldeltax_left() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_LDeltaX_left)
  return f_ldeltax_left_;
}
inline void RadarObjectList_RadarObject::set_f_ldeltax_left(float value) {
  set_has_f_ldeltax_left();
  f_ldeltax_left_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_LDeltaX_left)
}

// optional float f_LDeltaX_mid = 16;
inline bool RadarObjectList_RadarObject::has_f_ldeltax_mid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_ldeltax_mid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_ldeltax_mid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RadarObjectList_RadarObject::clear_f_ldeltax_mid() {
  f_ldeltax_mid_ = 0;
  clear_has_f_ldeltax_mid();
}
inline float RadarObjectList_RadarObject::f_ldeltax_mid() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_LDeltaX_mid)
  return f_ldeltax_mid_;
}
inline void RadarObjectList_RadarObject::set_f_ldeltax_mid(float value) {
  set_has_f_ldeltax_mid();
  f_ldeltax_mid_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_LDeltaX_mid)
}

// optional float f_LDeltaX_right = 17;
inline bool RadarObjectList_RadarObject::has_f_ldeltax_right() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_ldeltax_right() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_ldeltax_right() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RadarObjectList_RadarObject::clear_f_ldeltax_right() {
  f_ldeltax_right_ = 0;
  clear_has_f_ldeltax_right();
}
inline float RadarObjectList_RadarObject::f_ldeltax_right() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_LDeltaX_right)
  return f_ldeltax_right_;
}
inline void RadarObjectList_RadarObject::set_f_ldeltax_right(float value) {
  set_has_f_ldeltax_right();
  f_ldeltax_right_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_LDeltaX_right)
}

// optional float f_LDeltaY_left = 18;
inline bool RadarObjectList_RadarObject::has_f_ldeltay_left() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_ldeltay_left() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_ldeltay_left() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RadarObjectList_RadarObject::clear_f_ldeltay_left() {
  f_ldeltay_left_ = 0;
  clear_has_f_ldeltay_left();
}
inline float RadarObjectList_RadarObject::f_ldeltay_left() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_LDeltaY_left)
  return f_ldeltay_left_;
}
inline void RadarObjectList_RadarObject::set_f_ldeltay_left(float value) {
  set_has_f_ldeltay_left();
  f_ldeltay_left_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_LDeltaY_left)
}

// optional float f_LDeltaY_mid = 19;
inline bool RadarObjectList_RadarObject::has_f_ldeltay_mid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_ldeltay_mid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_ldeltay_mid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RadarObjectList_RadarObject::clear_f_ldeltay_mid() {
  f_ldeltay_mid_ = 0;
  clear_has_f_ldeltay_mid();
}
inline float RadarObjectList_RadarObject::f_ldeltay_mid() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_LDeltaY_mid)
  return f_ldeltay_mid_;
}
inline void RadarObjectList_RadarObject::set_f_ldeltay_mid(float value) {
  set_has_f_ldeltay_mid();
  f_ldeltay_mid_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_LDeltaY_mid)
}

// optional float f_LDeltaY_right = 20;
inline bool RadarObjectList_RadarObject::has_f_ldeltay_right() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_ldeltay_right() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_ldeltay_right() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RadarObjectList_RadarObject::clear_f_ldeltay_right() {
  f_ldeltay_right_ = 0;
  clear_has_f_ldeltay_right();
}
inline float RadarObjectList_RadarObject::f_ldeltay_right() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_LDeltaY_right)
  return f_ldeltay_right_;
}
inline void RadarObjectList_RadarObject::set_f_ldeltay_right(float value) {
  set_has_f_ldeltay_right();
  f_ldeltay_right_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_LDeltaY_right)
}

// optional .pb.PDK.RadarObjectList.RadarObject.LDeltaQual e_LDeltaQual = 21;
inline bool RadarObjectList_RadarObject::has_e_ldeltaqual() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_e_ldeltaqual() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RadarObjectList_RadarObject::clear_has_e_ldeltaqual() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RadarObjectList_RadarObject::clear_e_ldeltaqual() {
  e_ldeltaqual_ = 0;
  clear_has_e_ldeltaqual();
}
inline ::pb::PDK::RadarObjectList_RadarObject_LDeltaQual RadarObjectList_RadarObject::e_ldeltaqual() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.e_LDeltaQual)
  return static_cast< ::pb::PDK::RadarObjectList_RadarObject_LDeltaQual >(e_ldeltaqual_);
}
inline void RadarObjectList_RadarObject::set_e_ldeltaqual(::pb::PDK::RadarObjectList_RadarObject_LDeltaQual value) {
  assert(::pb::PDK::RadarObjectList_RadarObject_LDeltaQual_IsValid(value));
  set_has_e_ldeltaqual();
  e_ldeltaqual_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.e_LDeltaQual)
}

// optional float f_RCS = 22;
inline bool RadarObjectList_RadarObject::has_f_rcs() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_rcs() {
  _has_bits_[0] |= 0x00100000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_rcs() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void RadarObjectList_RadarObject::clear_f_rcs() {
  f_rcs_ = 0;
  clear_has_f_rcs();
}
inline float RadarObjectList_RadarObject::f_rcs() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_RCS)
  return f_rcs_;
}
inline void RadarObjectList_RadarObject::set_f_rcs(float value) {
  set_has_f_rcs();
  f_rcs_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_RCS)
}

// optional float f_ObjectScore = 23;
inline bool RadarObjectList_RadarObject::has_f_objectscore() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_objectscore() {
  _has_bits_[0] |= 0x00200000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_objectscore() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void RadarObjectList_RadarObject::clear_f_objectscore() {
  f_objectscore_ = 0;
  clear_has_f_objectscore();
}
inline float RadarObjectList_RadarObject::f_objectscore() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_ObjectScore)
  return f_objectscore_;
}
inline void RadarObjectList_RadarObject::set_f_objectscore(float value) {
  set_has_f_objectscore();
  f_objectscore_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_ObjectScore)
}

// optional uint32 u_LifeCycles = 24;
inline bool RadarObjectList_RadarObject::has_u_lifecycles() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_u_lifecycles() {
  _has_bits_[0] |= 0x00400000u;
}
inline void RadarObjectList_RadarObject::clear_has_u_lifecycles() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void RadarObjectList_RadarObject::clear_u_lifecycles() {
  u_lifecycles_ = 0u;
  clear_has_u_lifecycles();
}
inline ::google::protobuf::uint32 RadarObjectList_RadarObject::u_lifecycles() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.u_LifeCycles)
  return u_lifecycles_;
}
inline void RadarObjectList_RadarObject::set_u_lifecycles(::google::protobuf::uint32 value) {
  set_has_u_lifecycles();
  u_lifecycles_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.u_LifeCycles)
}

// optional .pb.PDK.RadarObjectList.RadarObject.DynamicProperty e_DynamicProperty = 25;
inline bool RadarObjectList_RadarObject::has_e_dynamicproperty() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_e_dynamicproperty() {
  _has_bits_[0] |= 0x00800000u;
}
inline void RadarObjectList_RadarObject::clear_has_e_dynamicproperty() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void RadarObjectList_RadarObject::clear_e_dynamicproperty() {
  e_dynamicproperty_ = 0;
  clear_has_e_dynamicproperty();
}
inline ::pb::PDK::RadarObjectList_RadarObject_DynamicProperty RadarObjectList_RadarObject::e_dynamicproperty() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.e_DynamicProperty)
  return static_cast< ::pb::PDK::RadarObjectList_RadarObject_DynamicProperty >(e_dynamicproperty_);
}
inline void RadarObjectList_RadarObject::set_e_dynamicproperty(::pb::PDK::RadarObjectList_RadarObject_DynamicProperty value) {
  assert(::pb::PDK::RadarObjectList_RadarObject_DynamicProperty_IsValid(value));
  set_has_e_dynamicproperty();
  e_dynamicproperty_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.e_DynamicProperty)
}

// optional .pb.PDK.RadarObjectList.RadarObject.ObjState e_ObjState = 26;
inline bool RadarObjectList_RadarObject::has_e_objstate() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_e_objstate() {
  _has_bits_[0] |= 0x01000000u;
}
inline void RadarObjectList_RadarObject::clear_has_e_objstate() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void RadarObjectList_RadarObject::clear_e_objstate() {
  e_objstate_ = 0;
  clear_has_e_objstate();
}
inline ::pb::PDK::RadarObjectList_RadarObject_ObjState RadarObjectList_RadarObject::e_objstate() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.e_ObjState)
  return static_cast< ::pb::PDK::RadarObjectList_RadarObject_ObjState >(e_objstate_);
}
inline void RadarObjectList_RadarObject::set_e_objstate(::pb::PDK::RadarObjectList_RadarObject_ObjState value) {
  assert(::pb::PDK::RadarObjectList_RadarObject_ObjState_IsValid(value));
  set_has_e_objstate();
  e_objstate_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.e_ObjState)
}

// optional float f_VabsX = 28;
inline bool RadarObjectList_RadarObject::has_f_vabsx() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_vabsx() {
  _has_bits_[0] |= 0x02000000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_vabsx() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void RadarObjectList_RadarObject::clear_f_vabsx() {
  f_vabsx_ = 0;
  clear_has_f_vabsx();
}
inline float RadarObjectList_RadarObject::f_vabsx() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_VabsX)
  return f_vabsx_;
}
inline void RadarObjectList_RadarObject::set_f_vabsx(float value) {
  set_has_f_vabsx();
  f_vabsx_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_VabsX)
}

// optional float f_VabsY = 29;
inline bool RadarObjectList_RadarObject::has_f_vabsy() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_vabsy() {
  _has_bits_[0] |= 0x04000000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_vabsy() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void RadarObjectList_RadarObject::clear_f_vabsy() {
  f_vabsy_ = 0;
  clear_has_f_vabsy();
}
inline float RadarObjectList_RadarObject::f_vabsy() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_VabsY)
  return f_vabsy_;
}
inline void RadarObjectList_RadarObject::set_f_vabsy(float value) {
  set_has_f_vabsy();
  f_vabsy_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_VabsY)
}

// optional float f_AabsX = 30;
inline bool RadarObjectList_RadarObject::has_f_aabsx() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_aabsx() {
  _has_bits_[0] |= 0x08000000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_aabsx() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void RadarObjectList_RadarObject::clear_f_aabsx() {
  f_aabsx_ = 0;
  clear_has_f_aabsx();
}
inline float RadarObjectList_RadarObject::f_aabsx() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_AabsX)
  return f_aabsx_;
}
inline void RadarObjectList_RadarObject::set_f_aabsx(float value) {
  set_has_f_aabsx();
  f_aabsx_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_AabsX)
}

// optional float f_AabsY = 31;
inline bool RadarObjectList_RadarObject::has_f_aabsy() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_aabsy() {
  _has_bits_[0] |= 0x10000000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_aabsy() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void RadarObjectList_RadarObject::clear_f_aabsy() {
  f_aabsy_ = 0;
  clear_has_f_aabsy();
}
inline float RadarObjectList_RadarObject::f_aabsy() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_AabsY)
  return f_aabsy_;
}
inline void RadarObjectList_RadarObject::set_f_aabsy(float value) {
  set_has_f_aabsy();
  f_aabsy_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_AabsY)
}

// optional float f_VabsXStd = 32;
inline bool RadarObjectList_RadarObject::has_f_vabsxstd() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_vabsxstd() {
  _has_bits_[0] |= 0x20000000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_vabsxstd() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void RadarObjectList_RadarObject::clear_f_vabsxstd() {
  f_vabsxstd_ = 0;
  clear_has_f_vabsxstd();
}
inline float RadarObjectList_RadarObject::f_vabsxstd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_VabsXStd)
  return f_vabsxstd_;
}
inline void RadarObjectList_RadarObject::set_f_vabsxstd(float value) {
  set_has_f_vabsxstd();
  f_vabsxstd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_VabsXStd)
}

// optional float f_VabsYStd = 33;
inline bool RadarObjectList_RadarObject::has_f_vabsystd() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_vabsystd() {
  _has_bits_[0] |= 0x40000000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_vabsystd() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void RadarObjectList_RadarObject::clear_f_vabsystd() {
  f_vabsystd_ = 0;
  clear_has_f_vabsystd();
}
inline float RadarObjectList_RadarObject::f_vabsystd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_VabsYStd)
  return f_vabsystd_;
}
inline void RadarObjectList_RadarObject::set_f_vabsystd(float value) {
  set_has_f_vabsystd();
  f_vabsystd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_VabsYStd)
}

// optional float f_AabsXStd = 34;
inline bool RadarObjectList_RadarObject::has_f_aabsxstd() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_aabsxstd() {
  _has_bits_[0] |= 0x80000000u;
}
inline void RadarObjectList_RadarObject::clear_has_f_aabsxstd() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void RadarObjectList_RadarObject::clear_f_aabsxstd() {
  f_aabsxstd_ = 0;
  clear_has_f_aabsxstd();
}
inline float RadarObjectList_RadarObject::f_aabsxstd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_AabsXStd)
  return f_aabsxstd_;
}
inline void RadarObjectList_RadarObject::set_f_aabsxstd(float value) {
  set_has_f_aabsxstd();
  f_aabsxstd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_AabsXStd)
}

// optional float f_AabsYStd = 35;
inline bool RadarObjectList_RadarObject::has_f_aabsystd() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_aabsystd() {
  _has_bits_[1] |= 0x00000001u;
}
inline void RadarObjectList_RadarObject::clear_has_f_aabsystd() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void RadarObjectList_RadarObject::clear_f_aabsystd() {
  f_aabsystd_ = 0;
  clear_has_f_aabsystd();
}
inline float RadarObjectList_RadarObject::f_aabsystd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_AabsYStd)
  return f_aabsystd_;
}
inline void RadarObjectList_RadarObject::set_f_aabsystd(float value) {
  set_has_f_aabsystd();
  f_aabsystd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_AabsYStd)
}

// optional float f_Orientation = 36;
inline bool RadarObjectList_RadarObject::has_f_orientation() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_orientation() {
  _has_bits_[1] |= 0x00000002u;
}
inline void RadarObjectList_RadarObject::clear_has_f_orientation() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void RadarObjectList_RadarObject::clear_f_orientation() {
  f_orientation_ = 0;
  clear_has_f_orientation();
}
inline float RadarObjectList_RadarObject::f_orientation() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_Orientation)
  return f_orientation_;
}
inline void RadarObjectList_RadarObject::set_f_orientation(float value) {
  set_has_f_orientation();
  f_orientation_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_Orientation)
}

// optional float f_OrientationStd = 37;
inline bool RadarObjectList_RadarObject::has_f_orientationstd() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_orientationstd() {
  _has_bits_[1] |= 0x00000004u;
}
inline void RadarObjectList_RadarObject::clear_has_f_orientationstd() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void RadarObjectList_RadarObject::clear_f_orientationstd() {
  f_orientationstd_ = 0;
  clear_has_f_orientationstd();
}
inline float RadarObjectList_RadarObject::f_orientationstd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_OrientationStd)
  return f_orientationstd_;
}
inline void RadarObjectList_RadarObject::set_f_orientationstd(float value) {
  set_has_f_orientationstd();
  f_orientationstd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_OrientationStd)
}

// optional float f_DistZ = 38;
inline bool RadarObjectList_RadarObject::has_f_distz() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_distz() {
  _has_bits_[1] |= 0x00000008u;
}
inline void RadarObjectList_RadarObject::clear_has_f_distz() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void RadarObjectList_RadarObject::clear_f_distz() {
  f_distz_ = 0;
  clear_has_f_distz();
}
inline float RadarObjectList_RadarObject::f_distz() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_DistZ)
  return f_distz_;
}
inline void RadarObjectList_RadarObject::set_f_distz(float value) {
  set_has_f_distz();
  f_distz_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_DistZ)
}

// optional float f_DistZStd = 39;
inline bool RadarObjectList_RadarObject::has_f_distzstd() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void RadarObjectList_RadarObject::set_has_f_distzstd() {
  _has_bits_[1] |= 0x00000010u;
}
inline void RadarObjectList_RadarObject::clear_has_f_distzstd() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void RadarObjectList_RadarObject::clear_f_distzstd() {
  f_distzstd_ = 0;
  clear_has_f_distzstd();
}
inline float RadarObjectList_RadarObject::f_distzstd() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.f_DistZStd)
  return f_distzstd_;
}
inline void RadarObjectList_RadarObject::set_f_distzstd(float value) {
  set_has_f_distzstd();
  f_distzstd_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.f_DistZStd)
}

// repeated float a_Classification = 40;
inline int RadarObjectList_RadarObject::a_classification_size() const {
  return a_classification_.size();
}
inline void RadarObjectList_RadarObject::clear_a_classification() {
  a_classification_.Clear();
}
inline float RadarObjectList_RadarObject::a_classification(int index) const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.RadarObject.a_Classification)
  return a_classification_.Get(index);
}
inline void RadarObjectList_RadarObject::set_a_classification(int index, float value) {
  a_classification_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.RadarObject.a_Classification)
}
inline void RadarObjectList_RadarObject::add_a_classification(float value) {
  a_classification_.Add(value);
  // @@protoc_insertion_point(field_add:pb.PDK.RadarObjectList.RadarObject.a_Classification)
}
inline const ::google::protobuf::RepeatedField< float >&
RadarObjectList_RadarObject::a_classification() const {
  // @@protoc_insertion_point(field_list:pb.PDK.RadarObjectList.RadarObject.a_Classification)
  return a_classification_;
}
inline ::google::protobuf::RepeatedField< float >*
RadarObjectList_RadarObject::mutable_a_classification() {
  // @@protoc_insertion_point(field_mutable_list:pb.PDK.RadarObjectList.RadarObject.a_Classification)
  return &a_classification_;
}

// -------------------------------------------------------------------

// RadarObjectList

// optional .pb.PDK.SensorMsgHeader t_Header = 1;
inline bool RadarObjectList::has_t_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarObjectList::set_has_t_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarObjectList::clear_has_t_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::pb::PDK::SensorMsgHeader& RadarObjectList::_internal_t_header() const {
  return *t_header_;
}
inline const ::pb::PDK::SensorMsgHeader& RadarObjectList::t_header() const {
  const ::pb::PDK::SensorMsgHeader* p = t_header_;
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.t_Header)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::PDK::SensorMsgHeader*>(
      &::pb::PDK::_SensorMsgHeader_default_instance_);
}
inline ::pb::PDK::SensorMsgHeader* RadarObjectList::release_t_header() {
  // @@protoc_insertion_point(field_release:pb.PDK.RadarObjectList.t_Header)
  clear_has_t_header();
  ::pb::PDK::SensorMsgHeader* temp = t_header_;
  t_header_ = NULL;
  return temp;
}
inline ::pb::PDK::SensorMsgHeader* RadarObjectList::mutable_t_header() {
  set_has_t_header();
  if (t_header_ == NULL) {
    auto* p = CreateMaybeMessage<::pb::PDK::SensorMsgHeader>(GetArenaNoVirtual());
    t_header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.PDK.RadarObjectList.t_Header)
  return t_header_;
}
inline void RadarObjectList::set_allocated_t_header(::pb::PDK::SensorMsgHeader* t_header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(t_header_);
  }
  if (t_header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      t_header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, t_header, submessage_arena);
    }
    set_has_t_header();
  } else {
    clear_has_t_header();
  }
  t_header_ = t_header;
  // @@protoc_insertion_point(field_set_allocated:pb.PDK.RadarObjectList.t_Header)
}

// optional float f_EgoVelocity = 3;
inline bool RadarObjectList::has_f_egovelocity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarObjectList::set_has_f_egovelocity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarObjectList::clear_has_f_egovelocity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarObjectList::clear_f_egovelocity() {
  f_egovelocity_ = 0;
  clear_has_f_egovelocity();
}
inline float RadarObjectList::f_egovelocity() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.f_EgoVelocity)
  return f_egovelocity_;
}
inline void RadarObjectList::set_f_egovelocity(float value) {
  set_has_f_egovelocity();
  f_egovelocity_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.f_EgoVelocity)
}

// optional float f_EgoYawRate = 4;
inline bool RadarObjectList::has_f_egoyawrate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RadarObjectList::set_has_f_egoyawrate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RadarObjectList::clear_has_f_egoyawrate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RadarObjectList::clear_f_egoyawrate() {
  f_egoyawrate_ = 0;
  clear_has_f_egoyawrate();
}
inline float RadarObjectList::f_egoyawrate() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.f_EgoYawRate)
  return f_egoyawrate_;
}
inline void RadarObjectList::set_f_egoyawrate(float value) {
  set_has_f_egoyawrate();
  f_egoyawrate_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.f_EgoYawRate)
}

// optional uint32 u_NofUsedObjects = 5;
inline bool RadarObjectList::has_u_nofusedobjects() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RadarObjectList::set_has_u_nofusedobjects() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RadarObjectList::clear_has_u_nofusedobjects() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RadarObjectList::clear_u_nofusedobjects() {
  u_nofusedobjects_ = 0u;
  clear_has_u_nofusedobjects();
}
inline ::google::protobuf::uint32 RadarObjectList::u_nofusedobjects() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.u_NofUsedObjects)
  return u_nofusedobjects_;
}
inline void RadarObjectList::set_u_nofusedobjects(::google::protobuf::uint32 value) {
  set_has_u_nofusedobjects();
  u_nofusedobjects_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.u_NofUsedObjects)
}

// repeated .pb.PDK.RadarObjectList.RadarObject a_RadarObjectList = 6;
inline int RadarObjectList::a_radarobjectlist_size() const {
  return a_radarobjectlist_.size();
}
inline void RadarObjectList::clear_a_radarobjectlist() {
  a_radarobjectlist_.Clear();
}
inline ::pb::PDK::RadarObjectList_RadarObject* RadarObjectList::mutable_a_radarobjectlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.PDK.RadarObjectList.a_RadarObjectList)
  return a_radarobjectlist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb::PDK::RadarObjectList_RadarObject >*
RadarObjectList::mutable_a_radarobjectlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.PDK.RadarObjectList.a_RadarObjectList)
  return &a_radarobjectlist_;
}
inline const ::pb::PDK::RadarObjectList_RadarObject& RadarObjectList::a_radarobjectlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.a_RadarObjectList)
  return a_radarobjectlist_.Get(index);
}
inline ::pb::PDK::RadarObjectList_RadarObject* RadarObjectList::add_a_radarobjectlist() {
  // @@protoc_insertion_point(field_add:pb.PDK.RadarObjectList.a_RadarObjectList)
  return a_radarobjectlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::PDK::RadarObjectList_RadarObject >&
RadarObjectList::a_radarobjectlist() const {
  // @@protoc_insertion_point(field_list:pb.PDK.RadarObjectList.a_RadarObjectList)
  return a_radarobjectlist_;
}

// optional .pb.PDK.RadarObjectList.KinematicsProvided e_ProvidedKinematics = 8;
inline bool RadarObjectList::has_e_providedkinematics() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RadarObjectList::set_has_e_providedkinematics() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RadarObjectList::clear_has_e_providedkinematics() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RadarObjectList::clear_e_providedkinematics() {
  e_providedkinematics_ = 0;
  clear_has_e_providedkinematics();
}
inline ::pb::PDK::RadarObjectList_KinematicsProvided RadarObjectList::e_providedkinematics() const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.e_ProvidedKinematics)
  return static_cast< ::pb::PDK::RadarObjectList_KinematicsProvided >(e_providedkinematics_);
}
inline void RadarObjectList::set_e_providedkinematics(::pb::PDK::RadarObjectList_KinematicsProvided value) {
  assert(::pb::PDK::RadarObjectList_KinematicsProvided_IsValid(value));
  set_has_e_providedkinematics();
  e_providedkinematics_ = value;
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.e_ProvidedKinematics)
}

// repeated string a_ClassificationLabels = 9;
inline int RadarObjectList::a_classificationlabels_size() const {
  return a_classificationlabels_.size();
}
inline void RadarObjectList::clear_a_classificationlabels() {
  a_classificationlabels_.Clear();
}
inline const ::std::string& RadarObjectList::a_classificationlabels(int index) const {
  // @@protoc_insertion_point(field_get:pb.PDK.RadarObjectList.a_ClassificationLabels)
  return a_classificationlabels_.Get(index);
}
inline ::std::string* RadarObjectList::mutable_a_classificationlabels(int index) {
  // @@protoc_insertion_point(field_mutable:pb.PDK.RadarObjectList.a_ClassificationLabels)
  return a_classificationlabels_.Mutable(index);
}
inline void RadarObjectList::set_a_classificationlabels(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.a_ClassificationLabels)
  a_classificationlabels_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void RadarObjectList::set_a_classificationlabels(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pb.PDK.RadarObjectList.a_ClassificationLabels)
  a_classificationlabels_.Mutable(index)->assign(std::move(value));
}
#endif
inline void RadarObjectList::set_a_classificationlabels(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  a_classificationlabels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.PDK.RadarObjectList.a_ClassificationLabels)
}
inline void RadarObjectList::set_a_classificationlabels(int index, const char* value, size_t size) {
  a_classificationlabels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.PDK.RadarObjectList.a_ClassificationLabels)
}
inline ::std::string* RadarObjectList::add_a_classificationlabels() {
  // @@protoc_insertion_point(field_add_mutable:pb.PDK.RadarObjectList.a_ClassificationLabels)
  return a_classificationlabels_.Add();
}
inline void RadarObjectList::add_a_classificationlabels(const ::std::string& value) {
  a_classificationlabels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb.PDK.RadarObjectList.a_ClassificationLabels)
}
#if LANG_CXX11
inline void RadarObjectList::add_a_classificationlabels(::std::string&& value) {
  a_classificationlabels_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pb.PDK.RadarObjectList.a_ClassificationLabels)
}
#endif
inline void RadarObjectList::add_a_classificationlabels(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  a_classificationlabels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb.PDK.RadarObjectList.a_ClassificationLabels)
}
inline void RadarObjectList::add_a_classificationlabels(const char* value, size_t size) {
  a_classificationlabels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb.PDK.RadarObjectList.a_ClassificationLabels)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RadarObjectList::a_classificationlabels() const {
  // @@protoc_insertion_point(field_list:pb.PDK.RadarObjectList.a_ClassificationLabels)
  return a_classificationlabels_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RadarObjectList::mutable_a_classificationlabels() {
  // @@protoc_insertion_point(field_mutable_list:pb.PDK.RadarObjectList.a_ClassificationLabels)
  return &a_classificationlabels_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace PDK
}  // namespace pb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::PDK::RadarObjectList_RadarObject_LDeltaQual> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::PDK::RadarObjectList_RadarObject_LDeltaQual>() {
  return ::pb::PDK::RadarObjectList_RadarObject_LDeltaQual_descriptor();
}
template <> struct is_proto_enum< ::pb::PDK::RadarObjectList_RadarObject_DynamicProperty> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::PDK::RadarObjectList_RadarObject_DynamicProperty>() {
  return ::pb::PDK::RadarObjectList_RadarObject_DynamicProperty_descriptor();
}
template <> struct is_proto_enum< ::pb::PDK::RadarObjectList_RadarObject_ObjState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::PDK::RadarObjectList_RadarObject_ObjState>() {
  return ::pb::PDK::RadarObjectList_RadarObject_ObjState_descriptor();
}
template <> struct is_proto_enum< ::pb::PDK::RadarObjectList_KinematicsProvided> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::PDK::RadarObjectList_KinematicsProvided>() {
  return ::pb::PDK::RadarObjectList_KinematicsProvided_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_pdk_5fRadarObjectList_2eproto
