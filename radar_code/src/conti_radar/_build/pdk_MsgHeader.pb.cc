// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pdk_MsgHeader.proto

#include "pdk_MsgHeader.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_pdk_5fMsgHeader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pdk_5fMsgHeader_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgHeader_Time;
}  // namespace protobuf_pdk_5fMsgHeader_2eproto
namespace pb {
namespace PDK {
class MsgHeader_TimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgHeader_Time>
      _instance;
} _MsgHeader_Time_default_instance_;
class MsgHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgHeader>
      _instance;
} _MsgHeader_default_instance_;
}  // namespace PDK
}  // namespace pb
namespace protobuf_pdk_5fMsgHeader_2eproto {
static void InitDefaultsMsgHeader_Time() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::PDK::_MsgHeader_Time_default_instance_;
    new (ptr) ::pb::PDK::MsgHeader_Time();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PDK::MsgHeader_Time::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgHeader_Time =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgHeader_Time}, {}};

static void InitDefaultsMsgHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::PDK::_MsgHeader_default_instance_;
    new (ptr) ::pb::PDK::MsgHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PDK::MsgHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgHeader}, {
      &protobuf_pdk_5fMsgHeader_2eproto::scc_info_MsgHeader_Time.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgHeader_Time.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgHeader.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader_Time, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader_Time, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader_Time, u_sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader_Time, u_nsec_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader, u_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader, t_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader, e_timestamp_sync_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PDK::MsgHeader, e_signalsource_),
  1,
  0,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::pb::PDK::MsgHeader_Time)},
  { 9, 18, sizeof(::pb::PDK::MsgHeader)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::PDK::_MsgHeader_Time_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::PDK::_MsgHeader_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "pdk_MsgHeader.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023pdk_MsgHeader.proto\022\006pb.PDK\"\207\003\n\tMsgHea"
      "der\022\r\n\005u_Seq\030\001 \001(\r\022\'\n\007t_Stamp\030\002 \001(\0132\026.pb"
      ".PDK.MsgHeader.Time\022D\n\026e_Timestamp_sync_"
      "state\030\004 \001(\0162$.pb.PDK.MsgHeader.TimeStamp"
      "SyncState\0226\n\016e_SignalSource\030\005 \001(\0162\036.pb.P"
      "DK.MsgHeader.SignalSource\032%\n\004Time\022\r\n\005u_S"
      "ec\030\001 \001(\r\022\016\n\006u_Nsec\030\002 \001(\r\"6\n\014SignalSource"
      "\022\013\n\007UNKNOWN\020\000\022\n\n\006SENSOR\020\001\022\r\n\tALGORITHM\020\002"
      "\"e\n\022TimeStampSyncState\022\020\n\014UNKNOWN_SYNC\020\000"
      "\022\016\n\nNOT_SYNCED\020\001\022\016\n\nSYNCED_PTP\020\003\022\016\n\nSYNC"
      "ED_CAN\020\005\022\r\n\tSYNC_LOST\020\006"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 423);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pdk_MsgHeader.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_pdk_5fMsgHeader_2eproto
namespace pb {
namespace PDK {
const ::google::protobuf::EnumDescriptor* MsgHeader_SignalSource_descriptor() {
  protobuf_pdk_5fMsgHeader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pdk_5fMsgHeader_2eproto::file_level_enum_descriptors[0];
}
bool MsgHeader_SignalSource_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgHeader_SignalSource MsgHeader::UNKNOWN;
const MsgHeader_SignalSource MsgHeader::SENSOR;
const MsgHeader_SignalSource MsgHeader::ALGORITHM;
const MsgHeader_SignalSource MsgHeader::SignalSource_MIN;
const MsgHeader_SignalSource MsgHeader::SignalSource_MAX;
const int MsgHeader::SignalSource_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MsgHeader_TimeStampSyncState_descriptor() {
  protobuf_pdk_5fMsgHeader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pdk_5fMsgHeader_2eproto::file_level_enum_descriptors[1];
}
bool MsgHeader_TimeStampSyncState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgHeader_TimeStampSyncState MsgHeader::UNKNOWN_SYNC;
const MsgHeader_TimeStampSyncState MsgHeader::NOT_SYNCED;
const MsgHeader_TimeStampSyncState MsgHeader::SYNCED_PTP;
const MsgHeader_TimeStampSyncState MsgHeader::SYNCED_CAN;
const MsgHeader_TimeStampSyncState MsgHeader::SYNC_LOST;
const MsgHeader_TimeStampSyncState MsgHeader::TimeStampSyncState_MIN;
const MsgHeader_TimeStampSyncState MsgHeader::TimeStampSyncState_MAX;
const int MsgHeader::TimeStampSyncState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void MsgHeader_Time::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHeader_Time::kUSecFieldNumber;
const int MsgHeader_Time::kUNsecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHeader_Time::MsgHeader_Time()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pdk_5fMsgHeader_2eproto::scc_info_MsgHeader_Time.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PDK.MsgHeader.Time)
}
MsgHeader_Time::MsgHeader_Time(const MsgHeader_Time& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&u_sec_, &from.u_sec_,
    static_cast<size_t>(reinterpret_cast<char*>(&u_nsec_) -
    reinterpret_cast<char*>(&u_sec_)) + sizeof(u_nsec_));
  // @@protoc_insertion_point(copy_constructor:pb.PDK.MsgHeader.Time)
}

void MsgHeader_Time::SharedCtor() {
  ::memset(&u_sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&u_nsec_) -
      reinterpret_cast<char*>(&u_sec_)) + sizeof(u_nsec_));
}

MsgHeader_Time::~MsgHeader_Time() {
  // @@protoc_insertion_point(destructor:pb.PDK.MsgHeader.Time)
  SharedDtor();
}

void MsgHeader_Time::SharedDtor() {
}

void MsgHeader_Time::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgHeader_Time::descriptor() {
  ::protobuf_pdk_5fMsgHeader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pdk_5fMsgHeader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgHeader_Time& MsgHeader_Time::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pdk_5fMsgHeader_2eproto::scc_info_MsgHeader_Time.base);
  return *internal_default_instance();
}


void MsgHeader_Time::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PDK.MsgHeader.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&u_sec_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&u_nsec_) -
        reinterpret_cast<char*>(&u_sec_)) + sizeof(u_nsec_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgHeader_Time::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.PDK.MsgHeader.Time)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 u_Sec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_u_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 u_Nsec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_u_nsec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u_nsec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.PDK.MsgHeader.Time)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.PDK.MsgHeader.Time)
  return false;
#undef DO_
}

void MsgHeader_Time::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.PDK.MsgHeader.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 u_Sec = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->u_sec(), output);
  }

  // optional uint32 u_Nsec = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->u_nsec(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.PDK.MsgHeader.Time)
}

::google::protobuf::uint8* MsgHeader_Time::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.PDK.MsgHeader.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 u_Sec = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->u_sec(), target);
  }

  // optional uint32 u_Nsec = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->u_nsec(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PDK.MsgHeader.Time)
  return target;
}

size_t MsgHeader_Time::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PDK.MsgHeader.Time)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 u_Sec = 1;
    if (has_u_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->u_sec());
    }

    // optional uint32 u_Nsec = 2;
    if (has_u_nsec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->u_nsec());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHeader_Time::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PDK.MsgHeader.Time)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHeader_Time* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHeader_Time>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PDK.MsgHeader.Time)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PDK.MsgHeader.Time)
    MergeFrom(*source);
  }
}

void MsgHeader_Time::MergeFrom(const MsgHeader_Time& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PDK.MsgHeader.Time)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      u_sec_ = from.u_sec_;
    }
    if (cached_has_bits & 0x00000002u) {
      u_nsec_ = from.u_nsec_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgHeader_Time::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PDK.MsgHeader.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHeader_Time::CopyFrom(const MsgHeader_Time& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PDK.MsgHeader.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeader_Time::IsInitialized() const {
  return true;
}

void MsgHeader_Time::Swap(MsgHeader_Time* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHeader_Time::InternalSwap(MsgHeader_Time* other) {
  using std::swap;
  swap(u_sec_, other->u_sec_);
  swap(u_nsec_, other->u_nsec_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgHeader_Time::GetMetadata() const {
  protobuf_pdk_5fMsgHeader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pdk_5fMsgHeader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgHeader::InitAsDefaultInstance() {
  ::pb::PDK::_MsgHeader_default_instance_._instance.get_mutable()->t_stamp_ = const_cast< ::pb::PDK::MsgHeader_Time*>(
      ::pb::PDK::MsgHeader_Time::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHeader::kUSeqFieldNumber;
const int MsgHeader::kTStampFieldNumber;
const int MsgHeader::kETimestampSyncStateFieldNumber;
const int MsgHeader::kESignalSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHeader::MsgHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pdk_5fMsgHeader_2eproto::scc_info_MsgHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PDK.MsgHeader)
}
MsgHeader::MsgHeader(const MsgHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_t_stamp()) {
    t_stamp_ = new ::pb::PDK::MsgHeader_Time(*from.t_stamp_);
  } else {
    t_stamp_ = NULL;
  }
  ::memcpy(&u_seq_, &from.u_seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&e_signalsource_) -
    reinterpret_cast<char*>(&u_seq_)) + sizeof(e_signalsource_));
  // @@protoc_insertion_point(copy_constructor:pb.PDK.MsgHeader)
}

void MsgHeader::SharedCtor() {
  ::memset(&t_stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&e_signalsource_) -
      reinterpret_cast<char*>(&t_stamp_)) + sizeof(e_signalsource_));
}

MsgHeader::~MsgHeader() {
  // @@protoc_insertion_point(destructor:pb.PDK.MsgHeader)
  SharedDtor();
}

void MsgHeader::SharedDtor() {
  if (this != internal_default_instance()) delete t_stamp_;
}

void MsgHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgHeader::descriptor() {
  ::protobuf_pdk_5fMsgHeader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pdk_5fMsgHeader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgHeader& MsgHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pdk_5fMsgHeader_2eproto::scc_info_MsgHeader.base);
  return *internal_default_instance();
}


void MsgHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PDK.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(t_stamp_ != NULL);
    t_stamp_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&u_seq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&e_signalsource_) -
        reinterpret_cast<char*>(&u_seq_)) + sizeof(e_signalsource_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.PDK.MsgHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 u_Seq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_u_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &u_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pb.PDK.MsgHeader.Time t_Stamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t_stamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pb.PDK.MsgHeader.TimeStampSyncState e_Timestamp_sync_state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::PDK::MsgHeader_TimeStampSyncState_IsValid(value)) {
            set_e_timestamp_sync_state(static_cast< ::pb::PDK::MsgHeader_TimeStampSyncState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .pb.PDK.MsgHeader.SignalSource e_SignalSource = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pb::PDK::MsgHeader_SignalSource_IsValid(value)) {
            set_e_signalsource(static_cast< ::pb::PDK::MsgHeader_SignalSource >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.PDK.MsgHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.PDK.MsgHeader)
  return false;
#undef DO_
}

void MsgHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.PDK.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 u_Seq = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->u_seq(), output);
  }

  // optional .pb.PDK.MsgHeader.Time t_Stamp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_t_stamp(), output);
  }

  // optional .pb.PDK.MsgHeader.TimeStampSyncState e_Timestamp_sync_state = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->e_timestamp_sync_state(), output);
  }

  // optional .pb.PDK.MsgHeader.SignalSource e_SignalSource = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->e_signalsource(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.PDK.MsgHeader)
}

::google::protobuf::uint8* MsgHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.PDK.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 u_Seq = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->u_seq(), target);
  }

  // optional .pb.PDK.MsgHeader.Time t_Stamp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_t_stamp(), deterministic, target);
  }

  // optional .pb.PDK.MsgHeader.TimeStampSyncState e_Timestamp_sync_state = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->e_timestamp_sync_state(), target);
  }

  // optional .pb.PDK.MsgHeader.SignalSource e_SignalSource = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->e_signalsource(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PDK.MsgHeader)
  return target;
}

size_t MsgHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PDK.MsgHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .pb.PDK.MsgHeader.Time t_Stamp = 2;
    if (has_t_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *t_stamp_);
    }

    // optional uint32 u_Seq = 1;
    if (has_u_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->u_seq());
    }

    // optional .pb.PDK.MsgHeader.TimeStampSyncState e_Timestamp_sync_state = 4;
    if (has_e_timestamp_sync_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->e_timestamp_sync_state());
    }

    // optional .pb.PDK.MsgHeader.SignalSource e_SignalSource = 5;
    if (has_e_signalsource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->e_signalsource());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PDK.MsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PDK.MsgHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PDK.MsgHeader)
    MergeFrom(*source);
  }
}

void MsgHeader::MergeFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PDK.MsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_t_stamp()->::pb::PDK::MsgHeader_Time::MergeFrom(from.t_stamp());
    }
    if (cached_has_bits & 0x00000002u) {
      u_seq_ = from.u_seq_;
    }
    if (cached_has_bits & 0x00000004u) {
      e_timestamp_sync_state_ = from.e_timestamp_sync_state_;
    }
    if (cached_has_bits & 0x00000008u) {
      e_signalsource_ = from.e_signalsource_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PDK.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHeader::CopyFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PDK.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeader::IsInitialized() const {
  return true;
}

void MsgHeader::Swap(MsgHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHeader::InternalSwap(MsgHeader* other) {
  using std::swap;
  swap(t_stamp_, other->t_stamp_);
  swap(u_seq_, other->u_seq_);
  swap(e_timestamp_sync_state_, other->e_timestamp_sync_state_);
  swap(e_signalsource_, other->e_signalsource_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgHeader::GetMetadata() const {
  protobuf_pdk_5fMsgHeader_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pdk_5fMsgHeader_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PDK
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::PDK::MsgHeader_Time* Arena::CreateMaybeMessage< ::pb::PDK::MsgHeader_Time >(Arena* arena) {
  return Arena::CreateInternal< ::pb::PDK::MsgHeader_Time >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::PDK::MsgHeader* Arena::CreateMaybeMessage< ::pb::PDK::MsgHeader >(Arena* arena) {
  return Arena::CreateInternal< ::pb::PDK::MsgHeader >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
